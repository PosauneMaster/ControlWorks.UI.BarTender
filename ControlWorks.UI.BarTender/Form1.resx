<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANBSURBVEhLrVbrS5NhFN9fUlt9TU371gWCCrySUmgxEuwKBRWCgZib03WhpL4E6tzWErWpZRKb
        5uumaaa26WZ2g74VrE86zOkHTc7pnMf3lffdjSUd+PGc57znOb/nPLfz6tKJvu6aIcfjqM0b7ZZy/V0R
        ajeoZUQIUo7XWWswXTfI7pnLnsZqPQVwEzYJQIFR3SqQ++zj3nv/ll4enl6yXrYYaWCMB/8jYtkDNqMc
        JrlQyjVxs9Poalt8X9H3D7lq5HBayXohZp52sNoW31frCZkYzDf05LCTZUmFmGZPiJU3dHsWp8c7oWqi
        E6smuuBiwMPA85PPhe0sfVNmqvin0N0i+O6aKwbqaE5LNOyC1flnuLrQDX+Wf8Dm75+49u0VxMJPMTp+
        B476OzIh2BRHOHugjc+5JsXlsAtlAlyPBHH91yyufenD6FsrLvlu4zF/h8Y/Ffie6EjhS6SZBRGIDGLU
        CoScGB1rAg6+OFIHRJBJBqxLTMC3MjXBnAOiY40isEIwOOOEN588IH1/h55pBxT7XakIIkzAVz85wZwd
        lkYtIjCB9AZc8ptgJeSAtc+9sPa1H8kGlX57KoINQcAGNXgPVubaebBYcwYtEa6SfXnqMRIBrszaiMws
        vhGBZrwKgiBhiRaDNuDBvBzK0ogMfPW4SG000MLfhZ0I02UglkhigxqnzpzEyvKipKgoLyaU4DnSBSqK
        8MjNy5jndWpiyJB0Wf2ttfHMdaYG8A4O4XQgCD29fVBvMuPD5kcwOT2DBGCdbODu7cOpDwGwO5xw8FJl
        Qgb81Ot2VV9IuGj3HjRDMDyPFutdCIbCYGm0osc7CHZXBxKA9QZLE3/b8gnPQ1FpaTzBJtcTcZtzfZ1u
        NiowN1nxPc2WSYalEWSC1jYbhj4uCLDOtuERn/DxULaHjBXqpWGCraeCRV97lQuMeOx4BscLC+FEfgGW
        lJZSm89AbguKS5Cg2IS9pKwMDhsr4EBfizqDGBctOfyW7Ot58t+eay5aclitZL9uryFH4bxDABctOVxy
        4UxoFtvLpZ6d2hbfJz3GRUsOk17EntDG08CMiz4XLXl45sJHmO8JBeLLKH5bZLAu8VPP9UR2TyI63V8N
        K+X8WMBJ1AAAAABJRU5ErkJggg==
</value>
  </data>
</root>